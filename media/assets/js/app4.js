// Generated by CoffeeScript 1.4.0
(function() {
  var $jQ, API_URL, BancoGenital, HEIGHT, Overlay, SESSIONS, WIDTH, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  API_URL = '/photos';

  _ref = [window.innerWidth, window.innerHeight], WIDTH = _ref[0], HEIGHT = _ref[1];

  SESSIONS = ['startmessage', 'wall', 'mostraoteu', 'about'];

  BancoGenital = (function() {

    function BancoGenital(viewport, size) {
      this.onResize = __bind(this.onResize, this);

      this.zoomOut = __bind(this.zoomOut, this);

      this.zoomIn = __bind(this.zoomIn, this);

      this.onPhotoClick = __bind(this.onPhotoClick, this);

      this.onMouseDragged = __bind(this.onMouseDragged, this);

      this.onMouseUp = __bind(this.onMouseUp, this);

      this.onMouseDown = __bind(this.onMouseDown, this);

      this.createDOMPhotos = __bind(this.createDOMPhotos, this);

      this.setup = __bind(this.setup, this);

      var _ref1;
      this.size = size;
      _ref1 = [this.size[0], this.size[1]], WIDTH = _ref1[0], HEIGHT = _ref1[1];
      this.photoJSONList = [];
      this.photosDOMList = [];
      this.inZoom = false;
      this.container = $jQ(viewport);
      this.onResize();
    }

    BancoGenital.prototype.setup = function(photoList) {
      var _this = this;
      this.photoJSONList = photoList;
      this.imgCounter = Math.floor(Math.random() * (this.photoJSONList.length - 1));
      window.addEventListener('resize', this.onResize, false);
      this.wall = new Wall("wall", {
        "draggable": true,
        "width": 155,
        "height": 230,
        "inertia": true,
        "inertiaSpeed": 0.92,
        "printCoordinates": true,
        "rangex": [-300, 300],
        "rangey": [-300, 300],
        callOnUpdate: function(items) {
          return _this.createDOMPhotos(items);
        },
        callOnMouseDown: this.onMouseDown,
        callOnMouseUp: this.onMouseUp,
        callOnMouseDragged: this.onMouseDragged
      });
      return this.wall.initWall();
    };

    BancoGenital.prototype.createDOMPhotos = function(items) {
      var _this = this;
      return items.each(function(e, i) {
        var currPhoto, img;
        if (_this.imgCounter >= _this.photoJSONList.length - 1) {
          _this.imgCounter = 0;
        } else {
          _this.imgCounter++;
        }
        currPhoto = _this.photoJSONList[_this.imgCounter];
        $jQ(e.node).text("");
        img = new Element("img[src='" + currPhoto.url_small + "']");
        img.inject(e.node).fade("hide").fade("in");
        $jQ(img).data('photo_info', currPhoto);
        return $jQ(img).mouseup(_this.onPhotoClick);
      });
    };

    BancoGenital.prototype.onMouseDown = function(e) {};

    BancoGenital.prototype.onMouseUp = function(e) {
      return this.dragged = false;
    };

    BancoGenital.prototype.onMouseDragged = function(delta, e) {
      if (Math.abs(delta[0]) > 5 || Math.abs(delta[1]) > 5) {
        return this.dragged = true;
      }
    };

    BancoGenital.prototype.onPhotoClick = function(ev) {
      if (this.dragged) {
        return;
      }
      this.cTarget = $jQ(ev.target);
      if (!this.inZoom) {
        this.zoomIn(this.cTarget);
        return this.lastTarget = this.cTarget;
      } else {
        if (this.cTarget.attr('url') === this.lastTarget.attr('url')) {
          return this.zoomOut();
        } else {
          this.zoomIn(this.cTarget);
          return this.lastTarget = this.cTarget;
        }
      }
    };

    BancoGenital.prototype.zoomIn = function(photo_el) {
      this.inZoom = true;
      $jQ(photo_el).attr('src', $jQ(photo_el).data('photo_info').url);
      return $jQ(photo_el).zoomTo({
        targetSize: 0.75,
        duration: 600
      });
    };

    BancoGenital.prototype.zoomOut = function() {
      this.inZoom = false;
      return $jQ('body').zoomTo({
        targetSize: 0.75,
        duration: 600
      });
    };

    BancoGenital.prototype.onResize = function() {
      var _ref1;
      _ref1 = [window.innerWidth, window.innerHeight], WIDTH = _ref1[0], HEIGHT = _ref1[1];
      return $jQ(this.container).css({
        width: WIDTH,
        height: HEIGHT
      });
    };

    return BancoGenital;

  })();

  Overlay = (function() {

    function Overlay(el) {
      this.hide = __bind(this.hide, this);

      this.show = __bind(this.show, this);

      this.setPage = __bind(this.setPage, this);
      this.el = $jQ(el);
      this.pages = ['startmessage', 'mostraoteu'];
      this.el.css({
        width: WIDTH,
        height: HEIGHT
      });
      this.on = false;
    }

    Overlay.prototype.setPage = function(new_page) {
      if (this.cpage) {
        this.cpage.hide();
      }
      return this.cpage = $jQ('#' + new_page);
    };

    Overlay.prototype.show = function() {
      this.el.fadeIn('fast');
      return this.on = true;
    };

    Overlay.prototype.hide = function() {
      this.el.fadeOut('slow');
      return this.on = false;
    };

    return Overlay;

  })();

  $.noConflict();

  $jQ = jQuery;

  $jQ(function() {
    var banco, menu, overlay, session,
      _this = this;
    overlay = new Overlay('#overlay');
    overlay.setPage('startmessage').show();
    session = 'startmessage';
    banco = new BancoGenital('#viewport', [window.innerWidth, window.innerHeight]);
    menu = $jQ('#menu');
    menu.show();
    $jQ('#menu');
    $jQ.getJSON(API_URL, function(data) {
      var obj, x, _i, _len;
      x = [];
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        obj = data[_i];
        x.push(obj);
      }
      return banco.setup(x);
    });
    $jQ('#enter-site').on('click', function(ev) {
      overlay.hide();
      menu.show();
      return session = 'wall';
    });
    $jQ('#menu-mostraoteu').on('click', function(ev) {
      if (session === 'mostraoteu') {
        overlay.hide();
        session = 'wall';
      } else {
        overlay.setPage('mostraoteu');
        overlay.show();
        session = 'mostraoteu';
      }
      ev.stopPropagation();
      return false;
    });
    window.overlay = overlay;
    window.banco = banco;
    window.menu = menu;
    window.session = session;
    return window.$jQ = $jQ;
  });

}).call(this);
